<% if user_signed_in? %>
  <div class="skill-container">
    <div id="myModal" class="modal">
      <div class="modal-content">
        <p class="modal-text"><%= @skill.name %>の習得レベルを保存しました!</p>
        <%= button_to "スキル編集ページに戻る", edit_category_skill_path(@category, @skill), method: :get, data: { turbolinks: false }, id: "backButton" %>
      </div>
    </div>
    <% @categories.each do |category| %>
      <%= category.name %>
      <div class="add-button">
        <button class="add-skill-button" data-category-id="<%= category.id %>"
        data-turbo="false">スキルを追加する</button>
      </div>
      <div class="skill-list">
        <table>
          <thead>
            <tr>
              <th>習得スキル</th>
              <th>習得レベル</th>
            </tr>
          </thead>
          <tbody>
            <% category.skills.each do |skill| %>
              <tr>
                <td><%= skill.name %></td>
                <td>
                  <%= form_tag category_skill_path(category, skill), method: :patch, style: "display:flex;" , id: "update-form" do %>
                    <%= select_tag "skill[skill_level]", options_for_select([['選択してください', nil]] + (0..100).map { |num| [num.to_s, num] }, selected: skill.skill_level), class: "skill-level-tag" %><br />
                    <%= submit_tag "習得レベルを保存する", class: "update-button", onclick: "showModal();" %>
                  <% end %>
                </td>
                <td>
                  <%= form_tag category_skill_path(category, skill), method: :delete, data: { confirm: '本当に削除しますか？' }, style: "display:flex;" do %>
                    <%= submit_tag "スキルを削除する", class: "delete-button" %>
                  <% end %>
                </td>
              </tr>
            <% end %>
          </tbody>
        </table>
      </div>
    <% end %>
  </div>
<% else %>
  <div class="please-login" style="text-align:center;">
    <p>ログインしてください</p>
    <%= link_to "ログイン", new_user_session_path %>
  </div>
<% end %>

<script>
  // カテゴリ毎のスキル追加ページへ遷移
  const addSkillButtons = document.querySelectorAll('.add-skill-button');
  addSkillButtons.forEach(button => {
    button.addEventListener('click', () => {
      const categoryId = button.getAttribute('data-category-id');
      window.location.href = `/categories/${categoryId}/skills/new`;
    });
  });

  const updateButtons = document.querySelectorAll('.update-button');
  updateButtons.forEach(button => {
    button.addEventListener('click', function(event) {

      // event.preventDefault();

      showModal('update');

    });
  });

  const deleteButtons = document.querySelectorAll('.delete-button');
  deleteButtons.forEach(button => {
    button.addEventListener('click', function() {
      // 削除処理を行った後に、ページをリロードする
      location.reload();
    });
  });


  function showModal() {
    const modal = document.getElementById('myModal');
    const modalMessage = document.getElementById('modalMessage');
    const backButton = document.getElementById('backButton');

    modal.style.display = 'block';
  }

</script>
